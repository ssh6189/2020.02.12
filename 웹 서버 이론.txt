웹서비스

웹 서버는 웹 클라이언트로부터 전송되어 오는 서비스 요처엥 대한 결과인 HTML문서를 해당 웹 클라이언트 제공

웹 브라우저 : HTML로 작성된 하이퍼텍스트 문서를 해석하여, 화면에 출력

가장 대표적인 웹서버로, 아파치 사용
-안정성, 확정성을 고려한 아키텍트



HTTP 프로토콜

Hyper Text Transfer Protocol

웹에서 정보를 주고 받을 수 있는 가장 기본적인 프로토콜(1996)

HTML 포맷을 사용한 text 및 멀티미디어 자료 공유

TCP(80번 포트) 프로토콜을 사용한 응용 계층

http: 로 시작하는 URL을 통해 접속

대규모 접속을 지원하기 위한 접속을 유지하지 않는 stateless 프로토콜

클라이언트와 서버 사이에 이루어지는 요청 응답/프로토콜



웹 서버에 요청하는 바익

웹서버에 클라이언트의 data를 전송하기 위한 전송 방법

GET과 POST는 전달하는 방식에서 차이가 있다.

GET방식 : URL을 통해 data 전송

GET방식으로 전송할 수 있는 data 크기는 한계가 있음

전송 URL이 노출됨

POST : BODY에 data를 담아서 전송



HTML이란

많은 수의 문서를 하이퍼 링크로 서로 연결시킬 수 있는 문서의 구조

참조(하이퍼링크)를 통해 한 문서에서 다른 문서로 즉시 접근할 수 있는 텍스트

하이퍼 텍스트는 1960년대 컴퓨터 개척자이자 철학자인 테드 넬슨이 처음 고안

하이퍼 : (건너 편의, 초월 과도한) 라는 의미



문서구조

기존 문서 : 순차적, 서열형 구조

하이퍼 텍스트 : 링크에 따라 그 차례가 바뀌는 임의적이면서, 나열형 구조

출판도니 책처럼 작가의 의도대로 사용자가 따라가는 것이 아닌, 하이퍼 링크로 연결된 문서들을
어떠한 행위(클릭)에 따라 자유롭게 이동

검색엔진과 더불어 정보습득의 새로운 창을 인류에게 가져다줌

시퀀스(나열), 그리드(격자), 트리(분산형 가지), 웹(그물) 구조가 존재한다.



TAG

태그는 하나의 키워드

오프닝 태그와 클로징 태그로 이루어짐

XHTML에서는 <img>가 아닌 <img/> 사용

중첩 태그

- <H1> <|> The Naton </|> <H1>

속성값을 설정하기 위해 "와" 모두 사용

주석
-<!--.....-->



HTML과 CSS

예전에는 CSS를 디자이너가 작업해서 신경 안써도 되었는데, 지금은 다르다. 알아야 한다.

1.명확성
HTML Tag로만 구성된 소스는 명확하다. 보기 편하다.
명확한 코드는 코드 자체를 좀더 엄격하게 제어할 수 있게 ㅐ준다.
논리적으로 명확한 구조와 코드의 어멱한 제어는 스크린리더 사용과 같은 접근성에도
기여한다.

코드가 적어지면 파일 용량도 좋고, 속도 측면도 잇점이 있다.

%템플릿 같은것

2.확장성
다양한 접속환경(운영체제, 브라우저, 미디어)에 대응할 수 있다.
구조와 관계없이 표현 부분만 별도의 CSS로 분리하여, 각 브라우저별, 미디어별로 사용 가능하다.

(1개의 HTML) : (IE6용 CSS, 프린터용 CSS, 스마트폰용 CSS)
(브라우저 대응은 'CSS 핵'에서, 미디어 대응은 '미디어 쿼리'에서 자세히 보게 됩니다.)
스타일 전환이 가능하고, 커스터마이징이 편해지며, 스킨화가 가능하다.

3. 보수 편의성
명확하고, 분리되어 있기 때문에 수정(유지보수)가 편하다.
: 개발자는 HTML을 보고, 퍼블리셔(디자이너)는 CSS를 보고, 요런식으로도 생각할 수 있다.

표현은 CSS에 통합되어 있기 때문에 한방에 수정 가능하다.
결국 원가절감에 기여할 수 있다.



모바일 viewport 지원

<head>
    <meata charset = "utf-8">
    <meta name = "viewport" content="width=device-wdth, initial-scale=1.0">
</head>


 모바일 Camera 지원

<input type = "file" name = file1"
accept = "image/*" capture = "camera"

#갤러리에서 사진을 올릴 수도 있고, 실시간으로 카메라에서 사진을 찍어 올릴 수도 있다.
#예전에는, 휴대폰 카메라로 찍어, 웹사이트에 올리는것이 불가능, 특정 앱을 쓰지 않는 이상, 지금은 가능



웹 서버 어플리케이션

웹을 기반으로 서버실행되는 프로그램

파이썬에서는 경량 webserver를 위해 세가지 방법 제공
기본 웹서버 python -m http.server 9000

스크립트 기반 웹서버

web Frame 기반 웹서버
Flask : 경량 웹서버
Django : MVC기반의 웹서버



Flask 폴더 기본구조

폴더기본구조
-루트 폴더 : app
-정적 파일 폴더 : app/static
하위에 css, img, js 폴더 생성
템플릿 폴더 : app/templates 폴더
python 코드는 루트 폴더에 작성
정적인 데이터는 전부, static폴더에 넣어야 한다.
CSS, IMG, JS : 사용자에게 보여지는것
templates, routes.py, README.md : 사용자에게 숨겨진것



오늘 연습할부분이 템플릿

HTML 코드와 Python 코드 분리

HTML 파일은 templates 폴더에 위치



Template 기반 Flask : 변수공유

{{변수}}표현을 사용해, python의 객체 접근

보통은 딕셔너리를 주는게 좋다.



HTML 내에서 {% fo r%}, {% endfor %}을 사용해 반복처리

@app.route('/s2')
def s2():
    list = ['홍길동', '이순신', '임꺽정']
    return render_tempate('home.html', name='홍길동', list = list)



#서버사이드를 할때는 pycharm을 쓰는게 좋다.



###################################################
Putty할당 
IP : 15.164.114.228
ID : lab10
비번 : 1234
내 포트 8890, 안되면 아무거나
jupyter notebook --ip 0.0.0.0 --port 8890

확인시 다음처럼
http://15.164.114.228:8892/image